# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  release:
    types: [ published ]

jobs:
  build-publish:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and deploy with Maven
        run: mvn --batch-mode deploy --settings settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JARs to Release
        run: |
          # Find all .jar files in the target directory and upload them, excluding those with '-original' in the name
          for JAR_FILE in target/*.jar; do
            if [[ "$JAR_FILE" != *"-original.jar" ]]; then
              echo "Uploading $JAR_FILE"
              curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @$JAR_FILE \
                ${{ github.event.release.upload_url }}?name=$(basename $JAR_FILE)
            fi
          done
